{"version":3,"sources":["src/mult321/Multiply321.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;IAEH;;;;;;;;;;;;;OAaG;IACF,qBAA4B,KAAsB;QAEhD,IAAI,SAAS,GAAW,OAAO,KAAK,KAAK,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QAC9E,EAAE,CAAA,CAAE,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC;YAC7C,MAAM,CAAC,GAAG,CAAC;QAEb,oCAAoC;QACpC,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAE1C,iHAAiH;QACjH,IAAI,IAAI,GAAa,KAAK,GAAG,KAAK,CAAC;QACnC,IAAI,MAAM,GAAW,KAAK,GAAG,IAAI,CAAC;QAElC,wFAAwF;QAExF,OAAO;QACP,IAAI,MAAM,GAAW,IAAI,IAAI,CAAC,CAAC;QAC/B,IAAI,MAAM,GAAW,IAAI,IAAI,CAAC,CAAC;QAC/B,IAAI,GAAiB,MAAM,GAAG,MAAM,CAAC;QAErC,IAAI,QAAQ,GAAW,MAAM,IAAI,CAAC,CAAC;QACnC,IAAI,QAAQ,GAAW,MAAM,IAAI,CAAC,CAAC;QACnC,IAAI,QAAQ,GAAW,MAAM,IAAI,CAAC,CAAC;QACnC,MAAM,GAAiB,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;QAEtD,MAAM,CAAE,KAAK,GAAG,IAAI,GAAG,MAAM,CAAC;IAChC,CAAC;IA1BD,qCA0BC,CAAA","file":"src/mult321/Multiply321.js","sourcesContent":["/** \n * Copyright 2016 Jim Armstrong (www.algorithmist.net)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Function to multiply an integer by the fixed value, 321, without using loops, multiply, or divide operator\n *\n * @param value : string or number - Input number which is presumed an integer for purposes of this example and will be converted to an integral\n * value.  Strings are allowed so that \"17\" could be allowed from an input control with 'text' attribute.  So, we will attempt to coerce to input\n * to a number before processing.\n *\n * @return number - integer input value multiplied by 321.  Note that for extremely large inputs, there is a possibility of overflow.  Returns NaN\n * for invalid inputs.\n *\n * @author Jim Armstrong (www.algorithmist.net)\n *\n * @version 1.0\n */\n export function multiply321(value: string | number): number \n {\n   let testValue: number = typeof value === 'string' ? parseFloat(value) : value;\n   if( isNaN(+testValue) || !isFinite(testValue) )\n     return NaN;\n\n   // extract an integer from the input\n   let input: number = Math.round(testValue);\n\n   // x * 321 = x + (x+x)*10 + (x+x+x)*10^2     In binary, 10 = 1010 (2^1 + 2^3) and 100 = 1100100 (2^2 + 2^5 + 2^6)\n   let twoX: number   = input + input;\n   let threeX: number = input + twoX;\n\n   // from above, (x+x)*10 = (x+x)*(2^1 + 2^3) and (x+x+x)*10^2 = (x+x+x)*(2^2 + 2^5 + 2^6)\n\n   // KISS\n   let twoX_1: number = twoX << 1;\n   let twoX_2: number = twoX << 3;\n   twoX               = twoX_1 + twoX_2;\n\n   let threeX_1: number = threeX << 2;\n   let threeX_2: number = threeX << 5;\n   let threeX_3: number = threeX << 6;\n   threeX               = threeX_1 + threeX_2 + threeX_3;\n\n   return  input + twoX + threeX;\n }\n"],"sourceRoot":"/source/"}