{"version":3,"sources":["src/bisection/Bisect.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;YAEH;;;;;;eAMG;YACF;gBAIE;gBAEA,CAAC;gBAEF;;;;;;;;;;;;;mBAaG;gBACY,qBAAM,GAApB,UAAqB,CAAS,EAAE,CAAS,EAAE,CAAW;oBAEpD,IAAI,IAAI,GAAa,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;oBACnC,IAAI,KAAK,GAAY,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;oBACnC,IAAI,MAAM,GAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBAEnD,MAAM,CAAC,MAAM,GAAG,EAAC,IAAI,EAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,EAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,EAAC,CAAC,EAAE,KAAK,EAAC,CAAC,EAAE,IAAI,EAAC,KAAK,EAAC,CAAC;gBAC5G,CAAC;gBAEc,uBAAQ,GAAvB,UAAwB,IAAY,EAAE,KAAa,EAAE,CAAW;oBAE9D,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC;wBACnC,MAAM,CAAC,IAAI,CAAC;oBAEd,EAAE,CAAA,CAAE,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAE,CAAC;wBACxB,MAAM,CAAC,EAAC,IAAI,EAAC,IAAI,EAAE,KAAK,EAAC,KAAK,EAAC,CAAC;oBAClC,IAAI,CACJ,CAAC;wBACC,IAAI,MAAM,GAAW,GAAG,GAAC,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;wBACxC,IAAI,YAAY,GAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;wBAC1D,EAAE,CAAA,CAAE,YAAY,IAAI,IAAK,CAAC;4BACxB,MAAM,CAAC,YAAY,CAAC;wBAEtB,IAAI,aAAa,GAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;wBAC5D,EAAE,CAAA,CAAE,aAAa,IAAI,IAAK,CAAC;4BACzB,MAAM,CAAC,aAAa,CAAC;oBACzB,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAjDc,kBAAG,GAAW,GAAG,CAAE,CAAC,iDAAiD;gBAkDtF,qBAAC;YAAD,CApDA,AAoDC,IAAA;YApDD,2CAoDC,CAAA","file":"src/bisection/Bisect.js","sourcesContent":["/** \n * Copyright 2016 Jim Armstrong (www.algorithmist.net)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Interval bisection - used to isolate a single, real root of a continuous function inside a small interval (as a preliminary to pass onto a root-finder)\n *\n * @author Jim Armstrong (www.algorithmist.net)\n *\n * @version 1.0\n */\n export class BisectInterval \n {\n   private static EPS: number = 1.0 ; // stop when interval width is this value or less\n\n   constructor()\n   {\n   }\n\n  /**\n   * Bisect the supplied function over the input interval [a,b]\n   *\n   * @param a : number left endpoint of interval\n   * \n   * @param b : number right endpoint of interval\n   *\n   * @param f : Function (takes a single number, x, and returns a number - the mathematical function whose real root is desired)\n   *\n   * @return Object 'left' property contains the left endpoint of the final interval.  'right' property contains the right endpoint of the final interval.  The \n   * boolean 'root' property indicates whether or not a potential (real) root exists in the final interval.\n   *\n   * There is only minimial error-checking for performance reasons.\n   */\n   public static bisect(a: number, b: number, f: Function): Object\n   {\n     let left: number   = Math.min(a,b);\n     let right: number  = Math.max(a,b);\n     let result: Object = this.__bisect(left, right, f);\n  \n     return result ? {left:+result['left'], right:+result['right'], root:true} : {left:a, right:b, root:false};\n   }\n\n   private static __bisect(left: number, right: number, f: Function): Object\n   {\n     if (Math.abs(right-left) <= this.EPS)\n       return null;\n\n     if( f(left)*f(right) < 0 )\n       return {left:left, right:right};\n     else\n     {\n       let middle: number = 0.5*(left + right);\n       let leftInterval: Object = this.__bisect(left, middle, f);\n       if( leftInterval != null )\n         return leftInterval;\n          \n       let rightInterval: Object = this.__bisect(middle, right, f);\n       if( rightInterval != null )\n         return rightInterval;\n     }\n\n     return null;\n   }\n }\n"],"sourceRoot":"/source/"}