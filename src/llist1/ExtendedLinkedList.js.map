{"version":3,"sources":["src/llist1/ExtendedLinkedList.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;YAYF;gBAAwC,sCAAe;gBAErD;oBAEE,iBAAO,CAAC;gBACV,CAAC;gBAEF;;;;;;mBAMG;gBACK,qCAAQ,GAAf,UAAgB,CAAS;oBAEvB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC;wBAC7B,MAAM,CAAC,IAAI,CAAC;oBAEd,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC;gBACvC,CAAC;gBACH,yBAAC;YAAD,CArBA,AAqBC,CArBuC,4BAAe,GAqBtD;YArBD,mDAqBC,CAAA","file":"src/llist1/ExtendedLinkedList.js","sourcesContent":["/** \n * Copyright 2016 Jim Armstrong (www.algorithmist.net)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An 'extended' linked list based on the Typescript Math Toolkit linked list structure.  \n *\n * @author Jim Armstrong (www.algorithmist.net)\n * \n * @version 1.0\n */\n import {TSMT$ListNode  } from '../shared/ListNode';\n import {TSMT$LinkedList} from '../shared/LinkedList';\n\n export class ExtendedLinkedList extends TSMT$LinkedList\n {\n   constructor()\n   {\n     super();\n   }\n\n  /**\n   * Access the k-th node from the end of the list\n   *\n   * @param k : number Zero-based index from the end of the list, inclusive (i.e. k=0 returns the tail node, k=1 returns the node prior to the tail)\n   *\n   * @return TSMT$ListNode Reference to the k-th node from the end of the list or null if no such node exists based on the input index and list size\n   */\n   public kfromEnd(k: number): TSMT$ListNode \n   {\n     if (k < 0 || k > this._count-1)\n       return null;\n\n     return this.getNode(this._count-k-1);\n   }\n }"],"sourceRoot":"/source/"}