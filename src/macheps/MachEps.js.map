{"version":3,"sources":["src/macheps/MachEps.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;IAEH;;;;;;;;OAQG;IACF;QAEE,eAAe;QACf,IAAI,OAAO,GAAU,GAAG,CAAC;QACzB,OAAQ,GAAG,GAAG,OAAO,IAAI,GAAG,EAC5B,CAAC;YACC,OAAO,IAAI,GAAG,CAAC;QACjB,CAAC;QACD,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;QAE5B,qBAAqB;QACrB,qCAAqC;QACrC,+CAA+C;QAC/C,mDAAmD;QACnD,+CAA+C;QAE/C,oCAAoC;QACpC,2CAA2C;QAE3C,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IApBD,6BAoBC,CAAA","file":"src/macheps/MachEps.js","sourcesContent":["/** \n * Copyright 2016 Jim Armstrong (www.algorithmist.net)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Function to return the machine epsilon using straight computation (loop and no-loop)\n *\n * return number - smallest number that can be added to 1.0 and produce a result different from 1.0.  Three different approaches may be used in this method.\n *\n * @author Jim Armstrong (www.algorithmist.net)\n *\n * @version 1.0\n */\n export function machEps(): number \n {\n   // using a loop\n   let epsilon:number = 1.0;\n   while ( 1.0 + epsilon != 1.0 )\n   {\n     epsilon *= 0.5;\n   }\n   epsilon = epsilon + epsilon;\n\n   // Eispack algorithm \n   // let four_thirds: number = 4.0/3.0;\n   // let third: number       = four_thirds - 1.0;\n   // let one: number         = third + third + third;\n   // let epsilon: number     = Math.abs(1.0-one);\n\n   // resort directly to the definition\n   //let epsilon: number = Math.pow(2.0, -52);\n \n   return epsilon;\n }\n"],"sourceRoot":"/source/"}