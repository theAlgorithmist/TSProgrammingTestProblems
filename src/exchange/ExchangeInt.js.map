{"version":3,"sources":["src/exchange/ExchangeInt.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;IAEH;;;;;;;;;;;;;OAaG;IACF,qBAA4B,CAAS,EAAE,CAAS;QAE9C,kFAAkF;QAClF,IAAI,MAAM,GAAW,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,MAAM,GAAW,MAAM,GAAG,CAAC,CAAC;QAChC,MAAM,IAAe,MAAM,CAAC;QAE5B,MAAM,CAAE,EAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAC,CAAC;IACjC,CAAC;IARD,qCAQC,CAAA","file":"src/exchange/ExchangeInt.js","sourcesContent":["/** \n * Copyright 2016 Jim Armstrong (www.algorithmist.net)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Function to illustrate exchange of integer values without using a temporary variable\n *\n * @param a : number - Integer number\n * @param b : number - Integer number\n *\n * return Object - 'a' property contains the result of interchanging a & b, i.e. the second input.  The 'b' property contains the first input.  The return is\n * only for testing convenience and note that the method will not work with non-numeric values.  The exchange may not be exact due to rounding errors if used\n * with certain floating-point values.\n *\n * @author Jim Armstrong (www.algorithmist.net)\n *\n * @version 1.0\n */\n export function exchangeInt(a: number, b: number): Object \n {\n   // no testing on inputs for this simple illustration, although feel free to add it\n   let localA: number = a + b;\n   let localB: number = localA - b;\n   localA            -= localB; \n\n   return  {a: localA, b: localB};\n }\n"],"sourceRoot":"/source/"}